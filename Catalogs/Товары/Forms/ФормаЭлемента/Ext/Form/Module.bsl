//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ
//



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Установка значения реквизита АдресКартинки.
	ФайлКартинки = Объект.ФайлКартинки;
	Если НЕ ФайлКартинки.Пустая() Тогда
		АдресКартинки = ПолучитьНавигационнуюСсылку(ФайлКартинки, "ДанныеФайла")
	Конецесли;
	
	ЗаполнитьХарактеристики();
	
	ОпределитьДоступнность(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаписатьХарактеристики();
КонецПроцедуры


&НаКлиенте
Процедура ФайлКартинкиПриИзменении(Элемент)

	// Отслеживание изменения картинки и соответствующее обновление
	// реквизита АдресКартинки.
	ФайлКартинки = Объект.ФайлКартинки;
	Если НЕ ФайлКартинки.Пустая() Тогда
		АдресКартинки = ПолучитьНавигационнуюСсылку(ФайлКартинки, "ДанныеФайла")
	Иначе
		АдресКартинки = "";
	Конецесли;

КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	ОпределитьДоступнность(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ФайлКартинкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Предупреждение(НСтр("ru = 'Данные не записаны'", "ru"));
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Процедуры и функции формы

//Расстановка признака доступность элементов в зависимости от того, редактируется  
//товар ИЛИ услуга
&НаКлиентеНаСервереБезКонтекста
Процедура ОпределитьДоступнность(Форма)

	ДоступностьРеквизитовТовара = Форма.Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыТоваров.Товар");
	Форма.Элементы.ШтрихКод.Доступность = ДоступностьРеквизитовТовара;
	Форма.Элементы.Поставщик.Доступность = ДоступностьРеквизитовТовара;
	Форма.Элементы.Артикул.Доступность = ДоступностьРеквизитовТовара;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьХарактеристику(Команда)
	
	//Выберем вид характеристики
	ВидХарактеристики = ОткрытьФормуМодально("ПланВидовХарактеристик.ВидыХарактеристик.ФормаВыбора");
	Если ВидХарактеристики = Неопределено Тогда
		Возврат;
	КонецЕсли;	 
	
	//Проверим наличие 
	Если ОписаниеХарактеристик.НайтиСтроки(
		 Новый Структура("ВидХарактеристики", ВидХарактеристики)).Количество() > 0 Тогда
		 Предупреждение(НСтр("ru = 'Характеристика уже существует!'", "ru"));
		 Возврат;
	КонецЕсли;	 
	
	//Добавим вид характеристики на форму
	ДобавитьХарактеристикуНаСервере(ВидХарактеристики);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьХарактеристику(Команда)
	
	//Выберем удаляемый вид
	СписокВидов = Новый СписокЗначений;
	Для каждого ОписаниеХарактеристики Из ОписаниеХарактеристик Цикл
		
		ЭлементСпискаВидов = СписокВидов.Добавить();
		ЭлементСпискаВидов.Значение = ОписаниеХарактеристики.ПолучитьИдентификатор();
		ЭлементСпискаВидов.Представление = Строка(ОписаниеХарактеристики.ВидХарактеристики);
		
	КонецЦикла;
	ВыбранныйЭлемент = СписокВидов.ВыбратьЭлемент("Удалить характеристику:");
	
	//Проверим выбор
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	//Выполним удаление
	УдалитьХарактеристикуНаСервере(ВыбранныйЭлемент.Значение);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьХарактеристики()

	//Добавление реквизитов
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыХарактеристик.Ссылка,
		|	ВидыХарактеристик.Код,
		|	ВидыХарактеристик.Наименование,
		|	ВидыХарактеристик.ТипЗначения,
		|	Характеристики.Объект,
		|	Характеристики.ВидХарактеристики,
		|	Характеристики.Значение
		|ИЗ
		|	ПланВидовХарактеристик.ВидыХарактеристик КАК ВидыХарактеристик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Характеристики КАК Характеристики
		|		ПО (Характеристики.ВидХарактеристики = ВидыХарактеристик.Ссылка)
		|ГДЕ
		|	Характеристики.Объект = &Объект
		|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ДобавляемыеРеквизиты = Новый Массив();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Реквизит = Новый РеквизитФормы(
			"Характеристика" + ВыборкаДетальныеЗаписи.Код,
			ВыборкаДетальныеЗаписи.ТипЗначения); 
		Реквизит.СохраняемыеДанные = Истина;	
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		
	КонецЦикла;
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	//Добавление элементов, заполнение данных, добавление описания характеристики
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элемент =Элементы.Добавить(
						  "Характеристика" + ВыборкаДетальныеЗаписи.Код,
						  Тип("ПолеФормы"), Элементы.ГруппаХарактеристики); 	
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = ВыборкаДетальныеЗаписи.Наименование;
		Элемент.ПутьКДанным = "Характеристика" + ВыборкаДетальныеЗаписи.Код;
		
		МассивПараметровВыбора = Новый Массив();
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ВыборкаДетальныеЗаписи.Ссылка));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
		
		ОписаниеХарактеристики = ОписаниеХарактеристик.Добавить();
		ОписаниеХарактеристики.ВидХарактеристики = ВыборкаДетальныеЗаписи.Ссылка;
		ОписаниеХарактеристики.ИмяРеквизита = "Характеристика" + ВыборкаДетальныеЗаписи.Код;

		ЭтаФорма["Характеристика" + ВыборкаДетальныеЗаписи.Код] = ВыборкаДетальныеЗаписи.Значение;
		
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьХарактеристикуНаСервере(ВидХарактеристики)
	
	//Добавление реквизита
	ДобавляемыеРеквизиты = Новый Массив();
	Реквизит = Новый РеквизитФормы("Характеристика" + ВидХарактеристики.Код,
			ВидХарактеристики.ТипЗначения); 
 	Реквизит.СохраняемыеДанные = Истина;	
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	//Добавление элемента, заполнение данных
	Элемент =Элементы.Добавить(
					  "Характеристика" + ВидХарактеристики.Код,
					  Тип("ПолеФормы"), Элементы.ГруппаХарактеристики); 	
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок = ВидХарактеристики.Наименование;
	Элемент.ПутьКДанным = "Характеристика" + ВидХарактеристики.Код;
	
	МассивПараметровВыбора = Новый Массив();
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ВидХарактеристики));
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	//Добавление описания характеристики
	ОписаниеХарактеристики = ОписаниеХарактеристик.Добавить();
	ОписаниеХарактеристики.ВидХарактеристики = ВидХарактеристики;
	ОписаниеХарактеристики.ИмяРеквизита = "Характеристика" + ВидХарактеристики.Код;
	
	//Новый элемент установим текущим
	ТекущийЭлемент = Элемент;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьХарактеристикуНаСервере(Идентификатор)
	
	ОписаниеХарактеристики = ОписаниеХарактеристик.НайтиПоИдентификатору(Идентификатор);
	ИмяРеквизита = ОписаниеХарактеристики.ИмяРеквизита;
	
	//Удаление описания
	ОписаниеХарактеристик.Удалить(ОписаниеХарактеристики);
	
	//Удаление элемента
	Элементы.Удалить(Элементы.Найти(ИмяРеквизита));
	
	//Удаление реквизита
	УдаляемыеРеквизиты = Новый Массив();
	УдаляемыеРеквизиты.Добавить(ИмяРеквизита);
	ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьХарактеристики()

	//Сформируем набор записей с новыми значениями характеристик
	НаборЗаписей = РегистрыСведений.Характеристики.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);
	Для каждого ОписаниеХарактеристики Из ОписаниеХарактеристик Цикл
		
		Запись = НаборЗаписей.Добавить();
		Запись.Объект = Объект.Ссылка;
		Запись.ВидХарактеристики = ОписаниеХарактеристики.ВидХарактеристики;
		Запись.Значение = ЭтаФорма[ОписаниеХарактеристики.ИмяРеквизита];
		
	КонецЦикла;
	
	//Запишем набор записей
	НаборЗаписей.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКартинку(Команда)

	Элементы.Картинка.Обновить();
	
КонецПроцедуры

